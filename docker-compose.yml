version: '3'

services:
  database:
    image: pgvector/pgvector:pg16
    hostname: database
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=calisto
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  server:
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:1234@host.docker.internal:5432/calisto
      - RABBIT_MQ_URL=amqp://host.docker.internal
      - SESSION_SECRET=secret
      - PORT=8080
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
  scraper: &scraper
    environment:
      - DATABASE_URL=postgres://postgres:1234@host.docker.internal:5432/calisto
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./docker/scraper/Dockerfile
    command: ["node", "run-scraper.js", "--all"]
  consumer: &consumer
    environment:
      - DATABASE_URL=postgres://postgres:1234@host.docker.internal:5432/calisto
      - CHAT_GPT_KEY=${CHAT_GPT_KEY}
      - CHAT_GPT_ORGANIZATION_ID=${CHAT_GPT_ORGANIZATION_ID}
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./docker/consumer/Dockerfile
    command: ["node", "run-consumer.js", "--all"]
